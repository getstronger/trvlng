// ---------------------------------------------------------- //
// ---------------------------------------------------------- //
@gradientLibraryLength:`api.run(function(api){
  return((api.getGradientArray().length)-1);
})`;


.generate-gradients(@n, @i: 1) when (@i =< @n) {
    .bg-gradient-@{i} {
       #gradient > .directional(
            @start-color: ~`api.run(function( api ) {
                tempArray = api.gradientArray;
                startColor = tempArray[@{i}].colour1;
                return startColor;
            })`,
            @end-color:~`api.run(function( api ) {
                tempArray = api.gradientArray;
                startColor = tempArray[@{i}].colour2;
                return startColor;
            })`,
            @deg: 45deg
        );
    }
    .generate-gradients(@n, (@i + 1));
}

.generate-gradients(@gradientLibraryLength);

// Test 1

//body:before{
//  content: `api.getContent()`;
//}

// Test 2

body:before{
  content: `api.run(function(api){
    return(api.getGradientArray().length);
  })`;
}